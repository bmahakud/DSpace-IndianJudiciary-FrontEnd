import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from "@angular/core";
import { DynamicFormControlComponent } from "@ng-dynamic-forms/core";
import * as i0 from "@angular/core";
import * as i1 from "@ng-dynamic-forms/core";
import * as i2 from "@angular/common";
import * as i3 from "@angular/forms";
export class DynamicNGBootstrapCheckboxComponent extends DynamicFormControlComponent {
    constructor(layoutService, validationService) {
        super(layoutService, validationService);
        this.layoutService = layoutService;
        this.validationService = validationService;
        this.blur = new EventEmitter();
        this.change = new EventEmitter();
        this.focus = new EventEmitter();
    }
}
DynamicNGBootstrapCheckboxComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: DynamicNGBootstrapCheckboxComponent, deps: [{ token: i1.DynamicFormLayoutService }, { token: i1.DynamicFormValidationService }], target: i0.ɵɵFactoryTarget.Component });
DynamicNGBootstrapCheckboxComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "15.0.2", type: DynamicNGBootstrapCheckboxComponent, selector: "dynamic-ng-bootstrap-checkbox", inputs: { formLayout: "formLayout", group: "group", layout: "layout", model: "model" }, outputs: { blur: "blur", change: "change", focus: "focus" }, usesInheritance: true, ngImport: i0, template: "<div [formGroup]=\"group\" class=\"form-check\" [class.disabled]=\"model.disabled\">\n\n    <label class=\"form-check-label\">\n\n        <input type=\"checkbox\" class=\"form-check-input\"\n               [checked]=\"model.checked\"\n               [class.is-invalid]=\"showErrorMessages\"\n               [formControlName]=\"model.id\"\n               [id]=\"id\"\n               [indeterminate]=\"model.indeterminate\"\n               [name]=\"model.name\"\n               [ngClass]=\"getClass('element', 'control')\"\n               [required]=\"model.required\"\n               [tabindex]=\"model.tabIndex\"\n               [value]=\"model.value\"\n               (blur)=\"onBlur($event)\"\n               (change)=\"onChange($event)\"\n               (focus)=\"onFocus($event)\"/><span [innerHTML]=\"model.label\"\n                                                [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></span>\n    </label>\n\n</div>\n", dependencies: [{ kind: "directive", type: i2.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { kind: "directive", type: i3.CheckboxControlValueAccessor, selector: "input[type=checkbox][formControlName],input[type=checkbox][formControl],input[type=checkbox][ngModel]" }, { kind: "directive", type: i3.NgControlStatus, selector: "[formControlName],[ngModel],[formControl]" }, { kind: "directive", type: i3.NgControlStatusGroup, selector: "[formGroupName],[formArrayName],[ngModelGroup],[formGroup],form:not([ngNoForm]),[ngForm]" }, { kind: "directive", type: i3.CheckboxRequiredValidator, selector: "input[type=checkbox][required][formControlName],input[type=checkbox][required][formControl],input[type=checkbox][required][ngModel]" }, { kind: "directive", type: i3.FormGroupDirective, selector: "[formGroup]", inputs: ["formGroup"], outputs: ["ngSubmit"], exportAs: ["ngForm"] }, { kind: "directive", type: i3.FormControlName, selector: "[formControlName]", inputs: ["formControlName", "disabled", "ngModel"], outputs: ["ngModelChange"] }], changeDetection: i0.ChangeDetectionStrategy.Default });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: DynamicNGBootstrapCheckboxComponent, decorators: [{
            type: Component,
            args: [{ selector: "dynamic-ng-bootstrap-checkbox", changeDetection: ChangeDetectionStrategy.Default, template: "<div [formGroup]=\"group\" class=\"form-check\" [class.disabled]=\"model.disabled\">\n\n    <label class=\"form-check-label\">\n\n        <input type=\"checkbox\" class=\"form-check-input\"\n               [checked]=\"model.checked\"\n               [class.is-invalid]=\"showErrorMessages\"\n               [formControlName]=\"model.id\"\n               [id]=\"id\"\n               [indeterminate]=\"model.indeterminate\"\n               [name]=\"model.name\"\n               [ngClass]=\"getClass('element', 'control')\"\n               [required]=\"model.required\"\n               [tabindex]=\"model.tabIndex\"\n               [value]=\"model.value\"\n               (blur)=\"onBlur($event)\"\n               (change)=\"onChange($event)\"\n               (focus)=\"onFocus($event)\"/><span [innerHTML]=\"model.label\"\n                                                [ngClass]=\"[getClass('element', 'label'), getClass('grid', 'label')]\"></span>\n    </label>\n\n</div>\n" }]
        }], ctorParameters: function () { return [{ type: i1.DynamicFormLayoutService }, { type: i1.DynamicFormValidationService }]; }, propDecorators: { formLayout: [{
                type: Input
            }], group: [{
                type: Input
            }], layout: [{
                type: Input
            }], model: [{
                type: Input
            }], blur: [{
                type: Output
            }], change: [{
                type: Output
            }], focus: [{
                type: Output
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1uZy1ib290c3RyYXAtY2hlY2tib3guY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZHluYW1pYy1mb3Jtcy91aS1uZy1ib290c3RyYXAvc3JjL2xpYi9jaGVja2JveC9keW5hbWljLW5nLWJvb3RzdHJhcC1jaGVja2JveC5jb21wb25lbnQudHMiLCIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWZvcm1zL3VpLW5nLWJvb3RzdHJhcC9zcmMvbGliL2NoZWNrYm94L2R5bmFtaWMtbmctYm9vdHN0cmFwLWNoZWNrYm94LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFFaEcsT0FBTyxFQUVILDJCQUEyQixFQUs5QixNQUFNLHdCQUF3QixDQUFDOzs7OztBQU9oQyxNQUFNLE9BQU8sbUNBQW9DLFNBQVEsMkJBQTJCO0lBVWhGLFlBQXNCLGFBQXVDLEVBQVksaUJBQStDO1FBQ3BILEtBQUssQ0FBQyxhQUFhLEVBQUUsaUJBQWlCLENBQUMsQ0FBQztRQUR0QixrQkFBYSxHQUFiLGFBQWEsQ0FBMEI7UUFBWSxzQkFBaUIsR0FBakIsaUJBQWlCLENBQThCO1FBSjlHLFNBQUksR0FBc0IsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUM3QyxXQUFNLEdBQXNCLElBQUksWUFBWSxFQUFFLENBQUM7UUFDL0MsVUFBSyxHQUFzQixJQUFJLFlBQVksRUFBRSxDQUFDO0lBSXhELENBQUM7O2dJQVpRLG1DQUFtQztvSEFBbkMsbUNBQW1DLGlQQ2hCaEQsZzlCQXNCQTsyRkROYSxtQ0FBbUM7a0JBTC9DLFNBQVM7K0JBQ0ksK0JBQStCLG1CQUV4Qix1QkFBdUIsQ0FBQyxPQUFPOzBKQUd2QyxVQUFVO3NCQUFsQixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxNQUFNO3NCQUFkLEtBQUs7Z0JBQ0csS0FBSztzQkFBYixLQUFLO2dCQUVJLElBQUk7c0JBQWIsTUFBTTtnQkFDRyxNQUFNO3NCQUFmLE1BQU07Z0JBQ0csS0FBSztzQkFBZCxNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT3V0cHV0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IFVudHlwZWRGb3JtR3JvdXAgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7XG4gICAgRHluYW1pY0NoZWNrYm94TW9kZWwsXG4gICAgRHluYW1pY0Zvcm1Db250cm9sQ29tcG9uZW50LFxuICAgIER5bmFtaWNGb3JtQ29udHJvbExheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dCxcbiAgICBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsXG4gICAgRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZVxufSBmcm9tIFwiQG5nLWR5bmFtaWMtZm9ybXMvY29yZVwiO1xuXG5AQ29tcG9uZW50KHtcbiAgICBzZWxlY3RvcjogXCJkeW5hbWljLW5nLWJvb3RzdHJhcC1jaGVja2JveFwiLFxuICAgIHRlbXBsYXRlVXJsOiBcIi4vZHluYW1pYy1uZy1ib290c3RyYXAtY2hlY2tib3guY29tcG9uZW50Lmh0bWxcIixcbiAgICBjaGFuZ2VEZXRlY3Rpb246IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LkRlZmF1bHRcbn0pXG5leHBvcnQgY2xhc3MgRHluYW1pY05HQm9vdHN0cmFwQ2hlY2tib3hDb21wb25lbnQgZXh0ZW5kcyBEeW5hbWljRm9ybUNvbnRyb2xDb21wb25lbnQge1xuICAgIEBJbnB1dCgpIGZvcm1MYXlvdXQ/OiBEeW5hbWljRm9ybUxheW91dDtcbiAgICBASW5wdXQoKSBncm91cCE6IFVudHlwZWRGb3JtR3JvdXA7XG4gICAgQElucHV0KCkgbGF5b3V0PzogRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0O1xuICAgIEBJbnB1dCgpIG1vZGVsITogRHluYW1pY0NoZWNrYm94TW9kZWw7XG5cbiAgICBAT3V0cHV0KCkgYmx1cjogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGNoYW5nZTogRXZlbnRFbWl0dGVyPGFueT4gPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG4gICAgQE91dHB1dCgpIGZvY3VzOiBFdmVudEVtaXR0ZXI8YW55PiA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcblxuICAgIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBsYXlvdXRTZXJ2aWNlOiBEeW5hbWljRm9ybUxheW91dFNlcnZpY2UsIHByb3RlY3RlZCB2YWxpZGF0aW9uU2VydmljZTogRHluYW1pY0Zvcm1WYWxpZGF0aW9uU2VydmljZSkge1xuICAgICAgICBzdXBlcihsYXlvdXRTZXJ2aWNlLCB2YWxpZGF0aW9uU2VydmljZSk7XG4gICAgfVxufVxuIiwiPGRpdiBbZm9ybUdyb3VwXT1cImdyb3VwXCIgY2xhc3M9XCJmb3JtLWNoZWNrXCIgW2NsYXNzLmRpc2FibGVkXT1cIm1vZGVsLmRpc2FibGVkXCI+XG5cbiAgICA8bGFiZWwgY2xhc3M9XCJmb3JtLWNoZWNrLWxhYmVsXCI+XG5cbiAgICAgICAgPGlucHV0IHR5cGU9XCJjaGVja2JveFwiIGNsYXNzPVwiZm9ybS1jaGVjay1pbnB1dFwiXG4gICAgICAgICAgICAgICBbY2hlY2tlZF09XCJtb2RlbC5jaGVja2VkXCJcbiAgICAgICAgICAgICAgIFtjbGFzcy5pcy1pbnZhbGlkXT1cInNob3dFcnJvck1lc3NhZ2VzXCJcbiAgICAgICAgICAgICAgIFtmb3JtQ29udHJvbE5hbWVdPVwibW9kZWwuaWRcIlxuICAgICAgICAgICAgICAgW2lkXT1cImlkXCJcbiAgICAgICAgICAgICAgIFtpbmRldGVybWluYXRlXT1cIm1vZGVsLmluZGV0ZXJtaW5hdGVcIlxuICAgICAgICAgICAgICAgW25hbWVdPVwibW9kZWwubmFtZVwiXG4gICAgICAgICAgICAgICBbbmdDbGFzc109XCJnZXRDbGFzcygnZWxlbWVudCcsICdjb250cm9sJylcIlxuICAgICAgICAgICAgICAgW3JlcXVpcmVkXT1cIm1vZGVsLnJlcXVpcmVkXCJcbiAgICAgICAgICAgICAgIFt0YWJpbmRleF09XCJtb2RlbC50YWJJbmRleFwiXG4gICAgICAgICAgICAgICBbdmFsdWVdPVwibW9kZWwudmFsdWVcIlxuICAgICAgICAgICAgICAgKGJsdXIpPVwib25CbHVyKCRldmVudClcIlxuICAgICAgICAgICAgICAgKGNoYW5nZSk9XCJvbkNoYW5nZSgkZXZlbnQpXCJcbiAgICAgICAgICAgICAgIChmb2N1cyk9XCJvbkZvY3VzKCRldmVudClcIi8+PHNwYW4gW2lubmVySFRNTF09XCJtb2RlbC5sYWJlbFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBbbmdDbGFzc109XCJbZ2V0Q2xhc3MoJ2VsZW1lbnQnLCAnbGFiZWwnKSwgZ2V0Q2xhc3MoJ2dyaWQnLCAnbGFiZWwnKV1cIj48L3NwYW4+XG4gICAgPC9sYWJlbD5cblxuPC9kaXY+XG4iXX0=