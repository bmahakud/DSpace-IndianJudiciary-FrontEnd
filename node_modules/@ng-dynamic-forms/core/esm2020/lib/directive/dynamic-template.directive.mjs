import { Directive, Input } from "@angular/core";
import * as i0 from "@angular/core";
export var DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT;
(function (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT) {
    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT["Start"] = "START";
    DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT["End"] = "END";
})(DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT || (DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT = {}));
export class DynamicTemplateDirective {
    constructor(templateRef) {
        this.templateRef = templateRef;
        this.align = DYNAMIC_TEMPLATE_DIRECTIVE_ALIGNMENT.End;
        this.as = null;
    }
}
DynamicTemplateDirective.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: DynamicTemplateDirective, deps: [{ token: i0.TemplateRef }], target: i0.ɵɵFactoryTarget.Directive });
DynamicTemplateDirective.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "15.0.2", type: DynamicTemplateDirective, selector: "ng-template[modelId],ng-template[modelType]", inputs: { align: "align", as: "as", index: "index", modelId: "modelId", modelType: "modelType" }, ngImport: i0 });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.2", ngImport: i0, type: DynamicTemplateDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: "ng-template[modelId],ng-template[modelType]"
                }]
        }], ctorParameters: function () { return [{ type: i0.TemplateRef }]; }, propDecorators: { align: [{
                type: Input
            }], as: [{
                type: Input
            }], index: [{
                type: Input
            }], modelId: [{
                type: Input
            }], modelType: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy10ZW1wbGF0ZS5kaXJlY3RpdmUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi9wcm9qZWN0cy9uZy1keW5hbWljLWZvcm1zL2NvcmUvc3JjL2xpYi9kaXJlY3RpdmUvZHluYW1pYy10ZW1wbGF0ZS5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQWUsTUFBTSxlQUFlLENBQUM7O0FBRTlELE1BQU0sQ0FBTixJQUFZLG9DQUdYO0FBSEQsV0FBWSxvQ0FBb0M7SUFDNUMsdURBQWUsQ0FBQTtJQUNmLG1EQUFXLENBQUE7QUFDZixDQUFDLEVBSFcsb0NBQW9DLEtBQXBDLG9DQUFvQyxRQUcvQztBQUtELE1BQU0sT0FBTyx3QkFBd0I7SUFPakMsWUFBbUIsV0FBNkI7UUFBN0IsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO1FBTnZDLFVBQUssR0FBVyxvQ0FBb0MsQ0FBQyxHQUFHLENBQUM7UUFDekQsT0FBRSxHQUFrQixJQUFJLENBQUM7SUFNbEMsQ0FBQzs7cUhBUlEsd0JBQXdCO3lHQUF4Qix3QkFBd0I7MkZBQXhCLHdCQUF3QjtrQkFIcEMsU0FBUzttQkFBQztvQkFDUCxRQUFRLEVBQUUsNkNBQTZDO2lCQUMxRDtrR0FFWSxLQUFLO3NCQUFiLEtBQUs7Z0JBQ0csRUFBRTtzQkFBVixLQUFLO2dCQUNHLEtBQUs7c0JBQWIsS0FBSztnQkFDRyxPQUFPO3NCQUFmLEtBQUs7Z0JBQ0csU0FBUztzQkFBakIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgSW5wdXQsIFRlbXBsYXRlUmVmIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcblxuZXhwb3J0IGVudW0gRFlOQU1JQ19URU1QTEFURV9ESVJFQ1RJVkVfQUxJR05NRU5UIHtcbiAgICBTdGFydCA9IFwiU1RBUlRcIixcbiAgICBFbmQgPSBcIkVORFwiXG59XG5cbkBEaXJlY3RpdmUoe1xuICAgIHNlbGVjdG9yOiBcIm5nLXRlbXBsYXRlW21vZGVsSWRdLG5nLXRlbXBsYXRlW21vZGVsVHlwZV1cIlxufSlcbmV4cG9ydCBjbGFzcyBEeW5hbWljVGVtcGxhdGVEaXJlY3RpdmUge1xuICAgIEBJbnB1dCgpIGFsaWduOiBzdHJpbmcgPSBEWU5BTUlDX1RFTVBMQVRFX0RJUkVDVElWRV9BTElHTk1FTlQuRW5kO1xuICAgIEBJbnB1dCgpIGFzOiBzdHJpbmcgfCBudWxsID0gbnVsbDtcbiAgICBASW5wdXQoKSBpbmRleD86IG51bWJlcjtcbiAgICBASW5wdXQoKSBtb2RlbElkPzogc3RyaW5nO1xuICAgIEBJbnB1dCgpIG1vZGVsVHlwZT86IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKHB1YmxpYyB0ZW1wbGF0ZVJlZjogVGVtcGxhdGVSZWY8YW55Pikge1xuICAgIH1cbn1cbiJdfQ==