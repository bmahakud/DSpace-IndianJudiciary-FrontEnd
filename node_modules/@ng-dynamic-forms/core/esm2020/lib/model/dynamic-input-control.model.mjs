import { __decorate } from "tslib";
import { DynamicFormValueControlModel } from "./dynamic-form-value-control.model";
import { serializable } from "../decorator/serializable.decorator";
import { isBoolean, isNumber } from "../utils/core.utils";
export class DynamicInputControlModel extends DynamicFormValueControlModel {
    constructor(config, layout) {
        super(config, layout);
        this.autoComplete = config.autoComplete ?? "on";
        this.autoFocus = isBoolean(config.autoFocus) ? config.autoFocus : false;
        this.maxLength = isNumber(config.maxLength) ? config.maxLength : null;
        this.minLength = isNumber(config.minLength) ? config.minLength : null;
        this.placeholder = config.placeholder ?? "";
        this.prefix = config.prefix ?? null;
        this.readOnly = isBoolean(config.readOnly) ? config.readOnly : false;
        this.spellCheck = isBoolean(config.spellCheck) ? config.spellCheck : false;
        this.suffix = config.suffix ?? null;
    }
}
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "autoComplete", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "autoFocus", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "maxLength", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "minLength", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "placeholder", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "prefix", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "readOnly", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "spellCheck", void 0);
__decorate([
    serializable()
], DynamicInputControlModel.prototype, "suffix", void 0);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHluYW1pYy1pbnB1dC1jb250cm9sLm1vZGVsLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmctZHluYW1pYy1mb3Jtcy9jb3JlL3NyYy9saWIvbW9kZWwvZHluYW1pYy1pbnB1dC1jb250cm9sLm1vZGVsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsNEJBQTRCLEVBQXNDLE1BQU0sb0NBQW9DLENBQUM7QUFFdEgsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ25FLE9BQU8sRUFBRSxTQUFTLEVBQUUsUUFBUSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFjMUQsTUFBTSxPQUFnQix3QkFBNEIsU0FBUSw0QkFBK0I7SUFXckYsWUFBc0IsTUFBeUMsRUFBRSxNQUFpQztRQUM5RixLQUFLLENBQUMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxDQUFDO1FBRXRCLElBQUksQ0FBQyxZQUFZLEdBQUcsTUFBTSxDQUFDLFlBQVksSUFBSSxJQUFJLENBQUM7UUFDaEQsSUFBSSxDQUFDLFNBQVMsR0FBRyxTQUFTLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7UUFDeEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDdEUsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUM7UUFDdEUsSUFBSSxDQUFDLFdBQVcsR0FBRyxNQUFNLENBQUMsV0FBVyxJQUFJLEVBQUUsQ0FBQztRQUM1QyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDO1FBQ3BDLElBQUksQ0FBQyxRQUFRLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQ3JFLElBQUksQ0FBQyxVQUFVLEdBQUcsU0FBUyxDQUFDLE1BQU0sQ0FBQyxVQUFVLENBQUMsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLFVBQVUsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO1FBQzNFLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sSUFBSSxJQUFJLENBQUM7SUFDeEMsQ0FBQztDQUNKO0FBdkJtQjtJQUFmLFlBQVksRUFBRTs4REFBc0I7QUFDckI7SUFBZixZQUFZLEVBQUU7MkRBQW9CO0FBQ25CO0lBQWYsWUFBWSxFQUFFOzJEQUEwQjtBQUN6QjtJQUFmLFlBQVksRUFBRTsyREFBMEI7QUFDekI7SUFBZixZQUFZLEVBQUU7NkRBQXFCO0FBQ3BCO0lBQWYsWUFBWSxFQUFFO3dEQUF1QjtBQUN0QjtJQUFmLFlBQVksRUFBRTswREFBbUI7QUFDbEI7SUFBZixZQUFZLEVBQUU7NERBQXFCO0FBQ3BCO0lBQWYsWUFBWSxFQUFFO3dEQUF1QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWwsIER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWxDb25maWcgfSBmcm9tIFwiLi9keW5hbWljLWZvcm0tdmFsdWUtY29udHJvbC5tb2RlbFwiO1xuaW1wb3J0IHsgRHluYW1pY0Zvcm1Db250cm9sTGF5b3V0IH0gZnJvbSBcIi4vbWlzYy9keW5hbWljLWZvcm0tY29udHJvbC1sYXlvdXQubW9kZWxcIjtcbmltcG9ydCB7IHNlcmlhbGl6YWJsZSB9IGZyb20gXCIuLi9kZWNvcmF0b3Ivc2VyaWFsaXphYmxlLmRlY29yYXRvclwiO1xuaW1wb3J0IHsgaXNCb29sZWFuLCBpc051bWJlciB9IGZyb20gXCIuLi91dGlscy9jb3JlLnV0aWxzXCI7XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHluYW1pY0lucHV0Q29udHJvbE1vZGVsQ29uZmlnPFQ+IGV4dGVuZHMgRHluYW1pY0Zvcm1WYWx1ZUNvbnRyb2xNb2RlbENvbmZpZzxUPiB7XG4gICAgYXV0b0NvbXBsZXRlPzogc3RyaW5nO1xuICAgIGF1dG9Gb2N1cz86IGJvb2xlYW47XG4gICAgbWF4TGVuZ3RoPzogbnVtYmVyO1xuICAgIG1pbkxlbmd0aD86IG51bWJlcjtcbiAgICBwbGFjZWhvbGRlcj86IHN0cmluZztcbiAgICBwcmVmaXg/OiBzdHJpbmc7XG4gICAgcmVhZE9ubHk/OiBib29sZWFuO1xuICAgIHNwZWxsQ2hlY2s/OiBib29sZWFuO1xuICAgIHN1ZmZpeD86IHN0cmluZztcbn1cblxuZXhwb3J0IGFic3RyYWN0IGNsYXNzIER5bmFtaWNJbnB1dENvbnRyb2xNb2RlbDxUPiBleHRlbmRzIER5bmFtaWNGb3JtVmFsdWVDb250cm9sTW9kZWw8VD4ge1xuICAgIEBzZXJpYWxpemFibGUoKSBhdXRvQ29tcGxldGU6IHN0cmluZztcbiAgICBAc2VyaWFsaXphYmxlKCkgYXV0b0ZvY3VzOiBib29sZWFuO1xuICAgIEBzZXJpYWxpemFibGUoKSBtYXhMZW5ndGg6IG51bWJlciB8IG51bGw7XG4gICAgQHNlcmlhbGl6YWJsZSgpIG1pbkxlbmd0aDogbnVtYmVyIHwgbnVsbDtcbiAgICBAc2VyaWFsaXphYmxlKCkgcGxhY2Vob2xkZXI6IHN0cmluZztcbiAgICBAc2VyaWFsaXphYmxlKCkgcHJlZml4OiBzdHJpbmcgfCBudWxsO1xuICAgIEBzZXJpYWxpemFibGUoKSByZWFkT25seTogYm9vbGVhbjtcbiAgICBAc2VyaWFsaXphYmxlKCkgc3BlbGxDaGVjazogYm9vbGVhbjtcbiAgICBAc2VyaWFsaXphYmxlKCkgc3VmZml4OiBzdHJpbmcgfCBudWxsO1xuXG4gICAgcHJvdGVjdGVkIGNvbnN0cnVjdG9yKGNvbmZpZzogRHluYW1pY0lucHV0Q29udHJvbE1vZGVsQ29uZmlnPFQ+LCBsYXlvdXQ/OiBEeW5hbWljRm9ybUNvbnRyb2xMYXlvdXQpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnLCBsYXlvdXQpO1xuXG4gICAgICAgIHRoaXMuYXV0b0NvbXBsZXRlID0gY29uZmlnLmF1dG9Db21wbGV0ZSA/PyBcIm9uXCI7XG4gICAgICAgIHRoaXMuYXV0b0ZvY3VzID0gaXNCb29sZWFuKGNvbmZpZy5hdXRvRm9jdXMpID8gY29uZmlnLmF1dG9Gb2N1cyA6IGZhbHNlO1xuICAgICAgICB0aGlzLm1heExlbmd0aCA9IGlzTnVtYmVyKGNvbmZpZy5tYXhMZW5ndGgpID8gY29uZmlnLm1heExlbmd0aCA6IG51bGw7XG4gICAgICAgIHRoaXMubWluTGVuZ3RoID0gaXNOdW1iZXIoY29uZmlnLm1pbkxlbmd0aCkgPyBjb25maWcubWluTGVuZ3RoIDogbnVsbDtcbiAgICAgICAgdGhpcy5wbGFjZWhvbGRlciA9IGNvbmZpZy5wbGFjZWhvbGRlciA/PyBcIlwiO1xuICAgICAgICB0aGlzLnByZWZpeCA9IGNvbmZpZy5wcmVmaXggPz8gbnVsbDtcbiAgICAgICAgdGhpcy5yZWFkT25seSA9IGlzQm9vbGVhbihjb25maWcucmVhZE9ubHkpID8gY29uZmlnLnJlYWRPbmx5IDogZmFsc2U7XG4gICAgICAgIHRoaXMuc3BlbGxDaGVjayA9IGlzQm9vbGVhbihjb25maWcuc3BlbGxDaGVjaykgPyBjb25maWcuc3BlbGxDaGVjayA6IGZhbHNlO1xuICAgICAgICB0aGlzLnN1ZmZpeCA9IGNvbmZpZy5zdWZmaXggPz8gbnVsbDtcbiAgICB9XG59XG4iXX0=