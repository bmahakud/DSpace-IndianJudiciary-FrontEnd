import { Injector } from "@angular/core";
import { UntypedFormControl, UntypedFormGroup } from "@angular/forms";
import { DynamicFormControlModel } from "../model/dynamic-form-control.model";
import { DynamicFormControlMatcher } from "./dynamic-form-relation-matchers";
import { DynamicFormControlRelation } from "../model/misc/dynamic-form-control-relation.model";
import { Subscription } from "rxjs";
import * as i0 from "@angular/core";
export declare type DynamicRelatedFormControls = {
    [path: string]: UntypedFormControl;
};
export declare class DynamicFormRelationService {
    private MATCHERS;
    private injector;
    constructor(MATCHERS: DynamicFormControlMatcher[], injector: Injector);
    getRelatedFormControls(model: DynamicFormControlModel, group: UntypedFormGroup): DynamicRelatedFormControls;
    findRelationByMatcher(relations: DynamicFormControlRelation[], matcher: DynamicFormControlMatcher): DynamicFormControlRelation | undefined;
    matchesCondition(relation: DynamicFormControlRelation, relatedFormControls: DynamicRelatedFormControls, matcher: DynamicFormControlMatcher): boolean;
    subscribeRelations(model: DynamicFormControlModel, group: UntypedFormGroup, control: UntypedFormControl): Subscription[];
    static ɵfac: i0.ɵɵFactoryDeclaration<DynamicFormRelationService, [{ optional: true; }, null]>;
    static ɵprov: i0.ɵɵInjectableDeclaration<DynamicFormRelationService>;
}
